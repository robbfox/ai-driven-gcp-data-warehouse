# .github/workflows/your-workflow-name.yml

name: 'Test, Plan, and Deploy Infrastructure'

on:
  push:
    branches:
      - master  # <--- IMPORTANT: Change this to 'master' if that is your default branch name
  pull_request:

permissions:
  contents: 'read'
  id-token: 'write' # Required for Workload Identity Federation (best practice)

jobs:
  test-and-deploy:
    name: 'Test and Deploy'
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout the repository code
    - name: Checkout Repository
      uses: actions/checkout@v4

    # 2. Authenticate to Google Cloud (MODERN METHOD)
    # This step must come before any step that needs to access GCP.
    - name: Authenticate to Google Cloud
      id: auth
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    # 3. Set up Python for testing and data loading
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install Python Dependencies
      run: pip install -r requirements.txt

    # 4. Run Python tests (which may need GCP access)
    - name: Run Python Tests
      run: |
        export PYTHONPATH=$(pwd)
        pytest src/tests/test_load_data.py
      env:
        # Pass secrets and variables as environment variables to your tests
        GCS_BUCKET_NAME: 'robb-gemini-bq'
        GCP_PROJECT_ID: '${{ secrets.GCP_PROJECT_ID }}'

    # 5. Set up Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.5.0' # Pinning the version is a best practice

    # 6. Terraform Init
    # We must specify the working-directory for all terraform commands
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform

    # 7. Terraform Plan (CRITICAL SAFETY STEP)
    - name: Terraform Plan
      run: terraform plan -var="project_id=${{ secrets.GCP_PROJECT_ID }}"
      working-directory: ./terraform

    # 8. Terraform Apply (only on a push to the main/master branch)
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push' 
      run: terraform apply -auto-approve -var="project_id=${{ secrets.GCP_PROJECT_ID }}"
      working-directory: ./terraform

    # 9. Run the data loading script after infrastructure is applied
    - name: Run Data Loading Script
      if: github.ref == 'refs/heads/master' && github.event_name == 'push' 
      run: python src/load_data.py
      env:
        GCS_BUCKET_NAME: 'robb-gemini-bq'
        GCP_PROJECT_ID: '${{ secrets.GCP_PROJECT_ID }}'